{
  "{\"sourceRoot\":\"C:\\\\Users\\\\sulim\\\\Desktop\\\\Web\\\\repo\\\\sl_portfolio\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\sulim\\\\Desktop\\\\Web\\\\repo\\\\sl_portfolio\",\"filename\":\"C:\\\\Users\\\\sulim\\\\Desktop\\\\Web\\\\repo\\\\sl_portfolio\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\sulim\\\\Desktop\\\\Web\\\\repo\\\\sl_portfolio\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\sulim\\Desktop\\Web\\repo\\sl_portfolio",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\sulim\\Desktop\\Web\\repo\\sl_portfolio",
      "filename": "C:\\Users\\sulim\\Desktop\\Web\\repo\\sl_portfolio\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\sulim\\Desktop\\Web\\repo\\sl_portfolio",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\sulim\\Desktop\\Web\\repo\\sl_portfolio\\gulpfile.babel.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\sulim\\Desktop\\Web\\repo\\sl_portfolio\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\sulim\\Desktop\\Web\\repo\\sl_portfolio",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.build = exports.dev = exports.watchForChanges = exports.reload = exports.serve = exports.scripts = exports.clean = exports.copy = exports.images = exports.styles = exports.promise = exports.hello = void 0;\n\nvar _gulp = require(\"gulp\");\n\nvar _yargs = _interopRequireDefault(require(\"yargs\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpCleanCss = _interopRequireDefault(require(\"gulp-clean-css\"));\n\nvar _gulpIf = _interopRequireDefault(require(\"gulp-if\"));\n\nvar _gulpPostcss = _interopRequireDefault(require(\"gulp-postcss\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _autoprefixer = _interopRequireDefault(require(\"autoprefixer\"));\n\nvar _gulpImagemin = _interopRequireDefault(require(\"gulp-imagemin\"));\n\nvar _webpackStream = _interopRequireDefault(require(\"webpack-stream\"));\n\nvar _vinylNamed = _interopRequireDefault(require(\"vinyl-named\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar PRODUCTION = _yargs[\"default\"].argv.prod;\n\nvar hello = function hello(cb) {\n  console.log(PRODUCTION);\n  cb();\n};\n\nexports.hello = hello;\n\nvar promise = function promise(cb) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      resolve();\n    }, 300);\n  });\n};\n\nexports.promise = promise;\n\nvar styles = function styles() {\n  return (0, _gulp.src)(['src/scss/bundle.scss', 'src/scss/admin.scss']).pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].init())).pipe((0, _gulpSass[\"default\"])().on('error', _gulpSass[\"default\"].logError)).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpPostcss[\"default\"])([_autoprefixer[\"default\"]]))).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpCleanCss[\"default\"])({\n    compatibility: 'ie8'\n  }))).pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].write())).pipe((0, _gulp.dest)('dist/css')).pipe(server.stream());\n};\n\nexports.styles = styles;\n\nvar images = function images() {\n  return (0, _gulp.src)('src/images/**/*.{jpg,jpeg,png,svg,gif}').pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpImagemin[\"default\"])())).pipe((0, _gulp.dest)('dist/images'));\n};\n\nexports.images = images;\n\nvar copy = function copy() {\n  return (0, _gulp.src)(['src/**/*', '!src/{images,js,scss}', '!src/{images,js,scss}/**/*']).pipe((0, _gulp.dest)('dist'));\n};\n\nexports.copy = copy;\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])(['dist']);\n};\n\nexports.clean = clean;\n\nvar scripts = function scripts() {\n  return (0, _gulp.src)(['src/js/bundle.js', 'src/js/admin.js']).pipe((0, _vinylNamed[\"default\"])()).pipe((0, _webpackStream[\"default\"])({\n    module: {\n      rules: [{\n        test: /\\.js$/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: []\n          }\n        }\n      }]\n    },\n    mode: PRODUCTION ? 'production' : 'development',\n    devtool: !PRODUCTION ? 'inline-source-map' : false,\n    output: {\n      filename: '[name].js'\n    },\n    externals: {\n      jquery: 'jQuery'\n    }\n  })).pipe((0, _gulp.dest)('dist/js'));\n};\n\nexports.scripts = scripts;\n\nvar server = _browserSync[\"default\"].create();\n\nvar serve = function serve(done) {\n  server.init({\n    proxy: \"http://localhost/sl_portfolio\" // put your local website link here\n\n  });\n  done();\n};\n\nexports.serve = serve;\n\nvar reload = function reload(done) {\n  server.reload();\n  done();\n};\n\nexports.reload = reload;\n\nvar watchForChanges = function watchForChanges() {\n  (0, _gulp.watch)('src/scss/**/*.scss', styles);\n  (0, _gulp.watch)('src/images/**/*.{jpg,jpeg,png,svg,gif}', (0, _gulp.series)(images, reload));\n  (0, _gulp.watch)(['src/**/*', '!src/{images,js,scss}', '!src/{images,js,scss}/**/*'], (0, _gulp.series)(copy, reload));\n  (0, _gulp.watch)('src/js/**/*.js', (0, _gulp.series)(scripts, reload));\n  (0, _gulp.watch)(\"**/*.php\", reload);\n};\n\nexports.watchForChanges = watchForChanges;\nvar dev = (0, _gulp.series)(clean, (0, _gulp.parallel)(styles, images, copy, scripts), serve, watchForChanges);\nexports.dev = dev;\nvar build = (0, _gulp.series)(clean, (0, _gulp.parallel)(styles, images, copy, scripts));\nexports.build = build;\nvar _default = dev;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbIlBST0RVQ1RJT04iLCJ5YXJncyIsImFyZ3YiLCJwcm9kIiwiaGVsbG8iLCJjYiIsImNvbnNvbGUiLCJsb2ciLCJwcm9taXNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJzZXRUaW1lb3V0Iiwic3R5bGVzIiwicGlwZSIsInNvdXJjZW1hcHMiLCJpbml0Iiwib24iLCJzYXNzIiwibG9nRXJyb3IiLCJhdXRvcHJlZml4ZXIiLCJjb21wYXRpYmlsaXR5Iiwid3JpdGUiLCJzZXJ2ZXIiLCJzdHJlYW0iLCJpbWFnZXMiLCJjb3B5IiwiY2xlYW4iLCJzY3JpcHRzIiwibW9kdWxlIiwicnVsZXMiLCJ0ZXN0IiwidXNlIiwibG9hZGVyIiwib3B0aW9ucyIsInByZXNldHMiLCJtb2RlIiwiZGV2dG9vbCIsIm91dHB1dCIsImZpbGVuYW1lIiwiZXh0ZXJuYWxzIiwianF1ZXJ5IiwiYnJvd3NlclN5bmMiLCJjcmVhdGUiLCJzZXJ2ZSIsImRvbmUiLCJwcm94eSIsInJlbG9hZCIsIndhdGNoRm9yQ2hhbmdlcyIsImRldiIsImJ1aWxkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFHQSxJQUFNQSxVQUFVLEdBQUdDLGtCQUFNQyxJQUFOLENBQVdDLElBQTlCOztBQUVPLElBQU1DLEtBQUssR0FBRyxTQUFSQSxLQUFRLENBQUNDLEVBQUQsRUFBUTtBQUMzQkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlQLFVBQVo7QUFDQUssRUFBQUEsRUFBRTtBQUNILENBSE07Ozs7QUFJQSxJQUFNRyxPQUFPLEdBQUcsU0FBVkEsT0FBVSxDQUFDSCxFQUFELEVBQVE7QUFDN0IsU0FBTyxJQUFJSSxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3RDQyxJ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LElBQU1FLE1BQU0sR0FBRyxTQUFUQSxNQUFTLENBQUFGLElBQUksRUFBSTtBQUM1QnRCLEVBQUFBLE1BQU0sQ0FBQ3dCLE1BQVA7QUFDQUYsRUFBQUEsSUFBSTtBQUNMLENBSE07Ozs7QUFLQSxJQUFNRyxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCLEdBQU07QUFDbkMsbUJBQU0sb0JBQU4sRUFBNEJuQyxNQUE1QjtBQUNBLG1CQUFNLHdDQUFOLEVBQWdELGtCQUFPWSxNQUFQLEVBQWVzQixNQUFmLENBQWhEO0FBQ0EsbUJBQU0sQ0FBQyxVQUFELEVBQVksdUJBQVosRUFBb0MsNEJBQXBDLENBQU4sRUFBeUUsa0JBQU9yQixJQUFQLEVBQWFxQixNQUFiLENBQXpFO0FBQ0EsbUJBQU0sZ0JBQU4sRUFBd0Isa0JBQU9uQixPQUFQLEVBQWdCbUIsTUFBaEIsQ0FBeEI7QUFDQSxtQkFBTSxVQUFOLEVBQWtCQSxNQUFsQjtBQUNELENBTk07OztBQU9BLElBQU1FLEdBQUcsR0FBRyxrQkFBT3RCLEtBQVAsRUFBYyxvQkFBU2QsTUFBVCxFQUFpQlksTUFBakIsRUFBeUJDLElBQXpCLEVBQStCRSxPQUEvQixDQUFkLEVBQXVEZ0IsS0FBdkQsRUFBOERJLGVBQTlELENBQVo7O0FBQ0EsSUFBTUUsS0FBSyxHQUFHLGtCQUFPdkIsS0FBUCxFQUFjLG9CQUFTZCxNQUFULEVBQWlCWSxNQUFqQixFQUF5QkMsSUFBekIsRUFBK0JFLE9BQS9CLENBQWQsQ0FBZDs7ZUFDUXFCLEciLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxzdWxpbVxcRGVza3RvcFxcV2ViXFxyZXBvXFxzbF9wb3J0Zm9saW8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzcmMsIGRlc3QsIHdhdGNoLCBzZXJpZXMsIHBhcmFsbGVsIH0gZnJvbSAnZ3VscCc7XHJcbmltcG9ydCB5YXJncyBmcm9tICd5YXJncyc7XHJcbmltcG9ydCBzYXNzIGZyb20gJ2d1bHAtc2Fzcyc7XHJcbmltcG9ydCBjbGVhbkNzcyBmcm9tICdndWxwLWNsZWFuLWNzcyc7XHJcbmltcG9ydCBndWxwaWYgZnJvbSAnZ3VscC1pZic7XHJcbmltcG9ydCBwb3N0Y3NzIGZyb20gJ2d1bHAtcG9zdGNzcyc7XHJcbmltcG9ydCBzb3VyY2VtYXBzIGZyb20gJ2d1bHAtc291cmNlbWFwcyc7XHJcbmltcG9ydCBhdXRvcHJlZml4ZXIgZnJvbSAnYXV0b3ByZWZpeGVyJztcclxuaW1wb3J0IGltYWdlbWluIGZyb20gJ2d1bHAtaW1hZ2VtaW4nO1xyXG5pbXBvcnQgd2VicGFjayBmcm9tICd3ZWJwYWNrLXN0cmVhbSc7XHJcbmltcG9ydCBuYW1lZCBmcm9tICd2aW55bC1uYW1lZCc7XHJcbmltcG9ydCBicm93c2VyU3luYyBmcm9tIFwiYnJvd3Nlci1zeW5jXCI7XHJcbmltcG9ydCBkZWwgZnJvbSAnZGVsJztcclxuXHJcblxyXG5jb25zdCBQUk9EVUNUSU9OID0geWFyZ3MuYXJndi5wcm9kO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhlbGxvID0gKGNiKSA9PiB7XHJcbiAgY29uc29sZS5sb2coUFJPRFVDVElPTik7XHJcbiAgY2IoKTtcclxufVxyXG5leHBvcnQgY29uc3QgcHJvbWlzZSA9IChjYikgPT4ge1xyXG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgfSwgMzAwKTtcclxuICB9KTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBzdHlsZXMgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIHNyYyhbJ3NyYy9zY3NzL2J1bmRsZS5zY3NzJywgJ3NyYy9zY3NzL2FkbWluLnNjc3MnXSlcclxuICAgIC5waXBlKGd1bHBpZighUFJPRFVDVElPTiwgc291cmNlbWFwcy5pbml0KCkpKVxyXG4gICAgLnBpcGUoc2FzcygpLm9uKCdlcnJvcicsIHNhc3MubG9nRXJyb3IpKVxyXG4gICAgLnBpcGUoZ3VscGlmKFBST0RVQ1RJT04sIHBvc3Rjc3MoWyBhdXRvcHJlZml4ZXIgXSkpKVxyXG4gICAgLnBpcGUoZ3VscGlmKFBST0RVQ1RJT04sIGNsZWFuQ3NzKHtjb21wYXRpYmlsaXR5OidpZTgnfSkpKVxyXG4gICAgLnBpcGUoZ3VscGlmKCFQUk9EVUNUSU9OLCBzb3VyY2VtYXBzLndyaXRlKCkpKVxyXG4gICAgLnBpcGUoZGVzdCgnZGlzdC9jc3MnKSlcclxuICAgIC5waXBlKHNlcnZlci5zdHJlYW0oKSk7XHJcbn1cclxuZXhwb3J0IGNvbnN0IGltYWdlcyA9ICgpID0+IHtcclxuICByZXR1cm4gc3JjKCdzcmMvaW1hZ2VzLyoqLyoue2pwZyxqcGVnLHBuZyxzdmcsZ2lmfScpXHJcbiAgICAucGlwZShndWxwaWYoUFJPRFVDVElPTiwgaW1hZ2VtaW4oKSkpXHJcbiAgICAucGlwZShkZXN0KCdkaXN0L2ltYWdlcycpKTtcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGNvcHkgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIHNyYyhbJ3NyYy8qKi8qJywnIXNyYy97aW1hZ2VzLGpzLHNjc3N9JywnIXNyYy97aW1hZ2VzLGpzLHNjc3N9LyoqLyonXSlcclxuICAgIC5waXBlKGRlc3QoJ2Rpc3QnKSk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBjbGVhbiA9ICgpID0+IGRlbChbJ2Rpc3QnXSk7XHJcblxyXG5leHBvcnQgY29uc3Qgc2NyaXB0cyA9ICgpID0+IHtcclxuICByZXR1cm4gc3JjKFsnc3JjL2pzL2J1bmRsZS5qcycsJ3NyYy9qcy9hZG1pbi5qcyddKVxyXG4gICAgLnBpcGUobmFtZWQoKSlcclxuICAgIC5waXBlKHdlYnBhY2soe1xyXG4gICAgICBtb2R1bGU6IHtcclxuICAgICAgICBydWxlczogW1xyXG4gICAgICAgICAge1xyXG4gICAgICAgICAgICB0ZXN0OiAvXFwuanMkLyxcclxuICAgICAgICAgICAgdXNlOiB7XHJcbiAgICAgICAgICAgICAgbG9hZGVyOiAnYmFiZWwtbG9hZGVyJyxcclxuICAgICAgICAgICAgICBvcHRpb25zOiB7XHJcbiAgICAgICAgICAgICAgICBwcmVzZXRzOiBbXVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICBdXHJcbiAgICB9LFxyXG4gICAgbW9kZTogUFJPRFVDVElPTiA/ICdwcm9kdWN0aW9uJyA6ICdkZXZlbG9wbWVudCcsXHJcbiAgICBkZXZ0b29sOiAhUFJPRFVDVElPTiA/ICdpbmxpbmUtc291cmNlLW1hcCcgOiBmYWxzZSxcclxuICAgIG91dHB1dDoge1xyXG4gICAgICBmaWxlbmFtZTogJ1tuYW1lXS5qcydcclxuICAgIH0sXHJcbiAgICBleHRlcm5hbHM6IHtcclxuICAgICAganF1ZXJ5OiAnalF1ZXJ5J1xyXG4gICAgfSxcclxuICB9KSlcclxuICAucGlwZShkZXN0KCdkaXN0L2pzJykpO1xyXG59XHJcblxyXG5jb25zdCBzZXJ2ZXIgPSBicm93c2VyU3luYy5jcmVhdGUoKTtcclxuZXhwb3J0IGNvbnN0IHNlcnZlID0gZG9uZSA9PiB7XHJcbiAgc2VydmVyLmluaXQoe1xyXG4gICAgcHJveHk6IFwiaHR0cDovL2xvY2FsaG9zdC9zbF9wb3J0Zm9saW9cIiAvLyBwdXQgeW91ciBsb2NhbCB3ZWJzaXRlIGxpbmsgaGVyZVxyXG4gIH0pO1xyXG4gIGRvbmUoKTtcclxufTtcclxuZXhwb3J0IGNvbnN0IHJlbG9hZCA9IGRvbmUgPT4ge1xyXG4gIHNlcnZlci5yZWxvYWQoKTtcclxuICBkb25lKCk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCB3YXRjaEZvckNoYW5nZXMgPSAoKSA9PiB7XHJcbiAgd2F0Y2goJ3NyYy9zY3NzLyoqLyouc2NzcycsIHN0eWxlcyk7XHJcbiAgd2F0Y2goJ3NyYy9pbWFnZXMvKiovKi57anBnLGpwZWcscG5nLHN2ZyxnaWZ9Jywgc2VyaWVzKGltYWdlcywgcmVsb2FkKSk7XHJcbiAgd2F0Y2goWydzcmMvKiovKicsJyFzcmMve2ltYWdlcyxqcyxzY3NzfScsJyFzcmMve2ltYWdlcyxqcyxzY3NzfS8qKi8qJ10sIHNlcmllcyhjb3B5LCByZWxvYWQpKTtcclxuICB3YXRjaCgnc3JjL2pzLyoqLyouanMnLCBzZXJpZXMoc2NyaXB0cywgcmVsb2FkKSk7XHJcbiAgd2F0Y2goXCIqKi8qLnBocFwiLCByZWxvYWQpO1xyXG59XHJcbmV4cG9ydCBjb25zdCBkZXYgPSBzZXJpZXMoY2xlYW4sIHBhcmFsbGVsKHN0eWxlcywgaW1hZ2VzLCBjb3B5LCBzY3JpcHRzKSwgc2VydmUsIHdhdGNoRm9yQ2hhbmdlcyk7XHJcbmV4cG9ydCBjb25zdCBidWlsZCA9IHNlcmllcyhjbGVhbiwgcGFyYWxsZWwoc3R5bGVzLCBpbWFnZXMsIGNvcHksIHNjcmlwdHMpKTtcclxuZXhwb3J0IGRlZmF1bHQgZGV2O1xyXG5cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "PRODUCTION",
        "yargs",
        "argv",
        "prod",
        "hello",
        "cb",
        "console",
        "log",
        "promise",
        "Promise",
        "resolve",
        "reject",
        "setTimeout",
        "styles",
        "pipe",
        "sourcemaps",
        "init",
        "on",
        "sass",
        "logError",
        "autoprefixer",
        "compatibility",
        "write",
        "server",
        "stream",
        "images",
        "copy",
        "clean",
        "scripts",
        "module",
        "rules",
        "test",
        "use",
        "loader",
        "options",
        "presets",
        "mode",
        "devtool",
        "output",
        "filename",
        "externals",
        "jquery",
        "browserSync",
        "create",
        "serve",
        "done",
        "proxy",
        "reload",
        "watchForChanges",
        "dev",
        "build"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\sulim\\Desktop\\Web\\repo\\sl_portfolio",
      "sourcesContent": [
        "import { src, dest, watch, series, parallel } from 'gulp';\r\nimport yargs from 'yargs';\r\nimport sass from 'gulp-sass';\r\nimport cleanCss from 'gulp-clean-css';\r\nimport gulpif from 'gulp-if';\r\nimport postcss from 'gulp-postcss';\r\nimport sourcemaps from 'gulp-sourcemaps';\r\nimport autoprefixer from 'autoprefixer';\r\nimport imagemin from 'gulp-imagemin';\r\nimport webpack from 'webpack-stream';\r\nimport named from 'vinyl-named';\r\nimport browserSync from \"browser-sync\";\r\nimport del from 'del';\r\n\r\n\r\nconst PRODUCTION = yargs.argv.prod;\r\n\r\nexport const hello = (cb) => {\r\n  console.log(PRODUCTION);\r\n  cb();\r\n}\r\nexport const promise = (cb) => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve();\r\n    }, 300);\r\n  });\r\n};\r\n\r\nexport const styles = () => {\r\n  return src(['src/scss/bundle.scss', 'src/scss/admin.scss'])\r\n    .pipe(gulpif(!PRODUCTION, sourcemaps.init()))\r\n    .pipe(sass().on('error', sass.logError))\r\n    .pipe(gulpif(PRODUCTION, postcss([ autoprefixer ])))\r\n    .pipe(gulpif(PRODUCTION, cleanCss({compatibility:'ie8'})))\r\n    .pipe(gulpif(!PRODUCTION, sourcemaps.write()))\r\n    .pipe(dest('dist/css'))\r\n    .pipe(server.stream());\r\n}\r\nexport const images = () => {\r\n  return src('src/images/**/*.{jpg,jpeg,png,svg,gif}')\r\n    .pipe(gulpif(PRODUCTION, imagemin()))\r\n    .pipe(dest('dist/images'));\r\n}\r\n\r\nexport const copy = () => {\r\n  return src(['src/**/*','!src/{images,js,scss}','!src/{images,js,scss}/**/*'])\r\n    .pipe(dest('dist'));\r\n}\r\n\r\nexport const clean = () => del(['dist']);\r\n\r\nexport const scripts = () => {\r\n  return src(['src/js/bundle.js','src/js/admin.js'])\r\n    .pipe(named())\r\n    .pipe(webpack({\r\n      module: {\r\n        rules: [\r\n          {\r\n            test: /\\.js$/,\r\n            use: {\r\n              loader: 'babel-loader',\r\n              options: {\r\n                presets: []\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    mode: PRODUCTION ? 'production' : 'development',\r\n    devtool: !PRODUCTION ? 'inline-source-map' : false,\r\n    output: {\r\n      filename: '[name].js'\r\n    },\r\n    externals: {\r\n      jquery: 'jQuery'\r\n    },\r\n  }))\r\n  .pipe(dest('dist/js'));\r\n}\r\n\r\nconst server = browserSync.create();\r\nexport const serve = done => {\r\n  server.init({\r\n    proxy: \"http://localhost/sl_portfolio\" // put your local website link here\r\n  });\r\n  done();\r\n};\r\nexport const reload = done => {\r\n  server.reload();\r\n  done();\r\n}\r\n\r\nexport const watchForChanges = () => {\r\n  watch('src/scss/**/*.scss', styles);\r\n  watch('src/images/**/*.{jpg,jpeg,png,svg,gif}', series(images, reload));\r\n  watch(['src/**/*','!src/{images,js,scss}','!src/{images,js,scss}/**/*'], series(copy, reload));\r\n  watch('src/js/**/*.js', series(scripts, reload));\r\n  watch(\"**/*.php\", reload);\r\n}\r\nexport const dev = series(clean, parallel(styles, images, copy, scripts), serve, watchForChanges);\r\nexport const build = series(clean, parallel(styles, images, copy, scripts));\r\nexport default dev;\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1576543700601
  }
}